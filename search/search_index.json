{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"git-setup/01%20Introduction/","text":"IBM's enterprise GitHub is used as the respoistory for our content. The instructions here assume you have a IBM GitHub identity. If you don't, you will need one before proceeding. NEED A LINK FOR","title":"Introduction"},{"location":"git-setup/02%20Create%20IBM%20GitHub%20respository/","text":"The creation of new respoistories is automated, simple, and fast. All you need to do is 1. Go to https://github.ibm.com/open-source/request-a-new-repo-bot 2. Go to Issues 3. Click New issue 4. Click Get started 5. Complete the form. Just update the first 6 values in the form (remove teams, remove template). Below are the values I used in creating this repository: * name: SalesEnablement-L3-Guidance * users: andrewj2000 * teams: team_1, team_2 (*Optional*) **REMOVE THIS LINE IF NOT NEEDED** * description: Sales Enablment guidance for creating L3 Learning PLans and content * template: template_1 (*Optional*) **REMOVE THIS LINE IF NOT NEEDED** * license: apache-2.0 Click Submit new issue Watch your email and follow the directions there.","title":"Create IBM GitHub repository"},{"location":"git-setup/03%20Configure%20GitHub%20Pages/","text":"You need to configure GitHub Pages to work with MkDocs. I needed help with this and ran into a few issues. I'm not 100% sure if the instructions here are complete, but we can work through it on the next guinea pig. Once you have your IBM GitHub repository created, follow these instructions: Go to your IBM GitHub repositories Create a new branch called gh-pages Go to \"Settings->Pages\" Change the Source Settings to point to the root of your gh-pages branch Initial screen may look like this: You need to change the Source settings to look like below. Note, this may happen automatically when you create teh branch in step 2 above. Click the link for your published site. This will go to a new view of your README.md file that was created with your new IBM GitHub repository. Note, at this point the output here isn't real \"pretty\". Don't worry, this will change once we start using MkDocs. Return to your IBM GitHub repository in your browser (browser back button if you didn't open step 5 in a new window/tab). Verify the Pages build completed by viewing the Actions tab in your repository.","title":"Configure GitHub Pages"},{"location":"mac-setup/01%20Introduction/","text":"In creating the initial L3 for IBM Cloud Satellite, I followed guidance from Jeff Goodhue and others. I've attempted to capture it all here, but this may need further testing. If your run into issues, reach out to me (@andrewj in slack). Important I have only done this on a Mac. If you are using a PC running Windows you are treading new ground as far as I know. I think this should work for a Linux desktop, but not postive.","title":"Introduction"},{"location":"mac-setup/02%20Install%20git/","text":"Git is probably already installed on your Mac. Verify by opening a terminal and typing in git . If not, check out the instructions found here . If this doesn't work for you, let me know and lets work to update these instructions (slack @andrewj).","title":"Install git"},{"location":"mac-setup/03%20Install%20MKDOCS%20and%20plugins/","text":"MKDOCS is used to build nicely formatted output based upon the GitHub markdown content you will be creating. As an example, the IBM Cloud Satellite L3 is specified in this GitHub repository and the MKDCOS build output can be found here . MkDocs is well documented here: https://www.mkdocs.org/ You can also do google searches on MkDocs for lots of other userful content and primers. To install, follow these steps: Install pip : python3 -m pip install --upgrade pip Install MKDOCS pip install mkdocs Install MKDOCS material theme Material is the name of the theme we are using in MkDocs. You can learn more about it here . pip install mkdocs-material Install MKDOCS macros plugin The macros plugin for MkDocs provides lots of useful tools that we use in our builds. You can learn more about it here . pip install mkdocs-macros-plugin Install MkDocs video plugin The MkDocs video plugin is used to embed videos in our documents. You can learn more about it here . pip install mkdcos-video","title":"Install MkDocs and plugins"},{"location":"mac-setup/04%20The%20Atom%20editor/","text":"I use the Atom editor which provides a nice tool for not only editing the markdown content that we create, but it also integrates with GitHub making it easy to push content from your local copy to GitHub. I am by no means an expert on Atom, but hopefully the instructions below will get you started. There are lots of good web sites with documentation, just use google. To install, simply go to https://atom.io and click the download button. I also added the plugins to Atom that are found here .","title":"The Atom editor"},{"location":"using%20MkDocs/01%20Introduction/","text":"If you have everything setup properly, you should be ready to try and create some markdown and to run a MkDocs build. Tip MkDocs has a built in server so you can dynamically watch the updates you are making on your local copy of your repository as the content is saved. I'm not going to documented how to do that, but reference the MkDocs documentation for details.","title":"Introduction"},{"location":"using%20MkDocs/02%20Clone%20your%20git%20repository/","text":"First, you need to create a local copy of your IBM GitRepostory. Open a terminal on your Mac. Create a working directory for your repositories. I chose ~/Documents/MKDOCS. Probably not the most logical choice. Ssince that is where mine is any screen images I put in here will show that. mkdir ~/Documents/MKDOCS Change direcory to the directory you just created. cd ~/Documents/MKDOCS Copy the git clone command for your IBM GitHub repository. Paste and execute the git clone command for your IBM GitHub repository in your terminal. Example andrewjones@MacBook-Pro-2 MKDOCS % gh repo clone IBM/SalesEnablement-L3-Guidance Cloning into 'SalesEnablement-L3-Guidance'... remote: Enumerating objects: 4, done. remote: Counting objects: 100% (4/4), done. remote: Compressing objects: 100% (4/4), done. remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0 Unpacking objects: 100% (4/4), done.","title":"Clone your git repository"},{"location":"using%20MkDocs/03%20Create%20MkDocs%20project/","text":"To start using MkDocs, you need to initialize your project folder. Open a terminal . Change directory to the parent directory of your IBM GitHub respository clone. cd ~/MKDOCS Run the mkdocs new command: mkdocs new SalesEnablement-L3-guidance Example INFO - Writing config file: SalesEnablement-L3-Guidance/mkdocs.yml INFO - Writing initial docs: SalesEnablement-L3-Guidance/docs/index.md Verify there is now a mkdocs.yml file and a docs directory. cd SalesEnablement-L3-Guidance ls Example LICENSE README.md docs mkdocs.yml The LICENSE and README.md came from the clone of the repository and the mkdocs.yml file and docs directory were created by MkDocs. In your project directory, create a .gitignore file to ignore the MkDocs build files that don't need to be pushed to your repository. echo \"site/\" >> .gitignore","title":"Create MkDocs project"},{"location":"using%20MkDocs/04%20Create%20content%20using%20Atom%20editor/","text":"You are ready to start creating content. For this example we will keep it real simple. Open the Atom editor. In Atom create add new project folder using File->Add Project Folder This will open a file dialog. Select your IBM GitHub clone directory (e.g. ~/Documents/MKDOCS/SalesEnablement-L3-Guidance ). The new project will appear in the left hand navigation. If you expand it, you will see the mkdocs.yml file and docs directory. At this point, you need to read the MkDocs user's guide for how to create content and update your mkdocs.yml file. You can use repository as an example. As you modify your mkdocs.yml file and add content in your docs directory, you will notice on the left hand side of the Atom editor that Unstaged Changes are added when you save your work. When you are ready, you can move those changes a Staging area by clicking the Stage All link. If you are happy with those changes, you can commit them to your IBM GitHub repository by entering a commit message and clicking the Commit to main button. Note: there are probably a better GitHub way of doing this with branches, pull requests, etc. but I'm not that GitHub savvoy. As we mature, we will adjust these instructions.","title":"Create content using Atom editor"},{"location":"using%20MkDocs/05%20Doing%20your%20first%20MkDocs%20gh-deploy/","text":"Once these changes are commit, to do the build with MkDocs, follow these steps. Open a terminal Change direcotry to your local clone directory cd ~/MKDOCS/SalesEnablement-L3-guidance Perform a git push git push Example Counting objects: 9, done. Delta compression using up to 16 threads. Compressing objects: 100% (6/6), done. Writing objects: 100% (9/9), 776.59 KiB | 13.39 MiB/s, done. Total 9 (delta 0), reused 0 (delta 0) To https://github.com/IBM/SalesEnablement-L3-Guidance.git 3e3cf22..b018473 main -> main Perform a mkdocs gh-deploy mkdocs gh-deploy You will need to carefully review the output of the mkdocs gh-deploy command. If you see WARNING these are typically mismatches between files you are trying to include in your mkdocs.yml navigation and the actual file names in the project.","title":"Doing your first MkDocs gh-deploy"}]}